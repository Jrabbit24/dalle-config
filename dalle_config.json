def load_config(self):
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        req = urllib.request.Request(self.config_url, headers=headers)
        
        with urllib.request.urlopen(req) as response:
            raw_data = response.read().decode('utf-8')
            
            # Periksa apakah respons kosong
            if not raw_data.strip():
                raise ValueError("Empty response from server")
                
            try:
                config = json.loads(raw_data)
                self.current_config = config
                messagebox.showinfo(
                    "Berhasil" if self.ui_language == "id" else "Success",
                    "Konfigurasi berhasil dimuat dari GitHub!" if self.ui_language == "id" 
                    else "Config loaded from GitHub!"
                )
            except json.JSONDecodeError as e:
                raise ValueError(f"Invalid JSON format: {str(e)}. Raw content: {raw_data[:200]}")
                    
    except Exception as e:
        error_msg = str(e)
        print(f"Error loading config: {error_msg}")
        
        # Dapatkan informasi debug tambahan
        debug_info = ""
        try:
            # Coba dapatkan konten untuk debug
            with urllib.request.urlopen(req) as debug_res:
                debug_content = debug_res.read().decode('utf-8', errors='replace')
                debug_info = f"\n\nDebug Info:\nStatus: {debug_res.status}\nContent: {debug_content[:500]}"
        except Exception as debug_e:
            debug_info = f"\n\nDebug Info Error: {str(debug_e)}"
        
        messagebox.showwarning(
            "Peringatan" if self.ui_language == "id" else "Warning",
            f"Tidak dapat memuat konfigurasi online:\n{error_msg}{debug_info}\n\n" +
            "Menggunakan konfigurasi default." if self.ui_language == "id"
            else f"Couldn't load online config:\n{error_msg}{debug_info}\n\nUsing default configuration."
        )
        self.current_config = self.default_config
    
    self.update_ui_with_config()
